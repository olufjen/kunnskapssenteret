
package no.naks.services.nhn.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "ICommunicationPartyService", targetNamespace = "http://register.nhn.no/CommunicationParty")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ICommunicationPartyService {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Ping", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/Ping")
    @WebResult(name = "PingResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "Ping", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.Ping")
    @ResponseWrapper(localName = "PingResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.PingResponse")
    public String ping();

    /**
     * 
     * @param search
     * @return
     *     returns no.naks.services.nhn.client.SearchResult
     * @throws ICommunicationPartyServiceSearchGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "Search", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/Search")
    @WebResult(name = "SearchResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "Search", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.Search")
    @ResponseWrapper(localName = "SearchResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.SearchResponse")
    public SearchResult search(
        @WebParam(name = "search", targetNamespace = "http://register.nhn.no/CommunicationParty")
        CommunicationPartySearch search)
        throws ICommunicationPartyServiceSearchGenericFaultFaultFaultMessage
    ;

    /**
     * 
     * @param id
     * @return
     *     returns no.naks.services.nhn.client.ArrayOfCommunicationParty
     * @throws ICommunicationPartyServiceSearchByIdGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "SearchById", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchById")
    @WebResult(name = "SearchByIdResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "SearchById", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.SearchById")
    @ResponseWrapper(localName = "SearchByIdResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.SearchByIdResponse")
    public ArrayOfCommunicationParty searchById(
        @WebParam(name = "id", targetNamespace = "http://register.nhn.no/CommunicationParty")
        String id)
        throws ICommunicationPartyServiceSearchByIdGenericFaultFaultFaultMessage
    ;

    /**
     * 
     * @param herId
     * @return
     *     returns no.naks.services.nhn.client.CommunicationParty
     * @throws ICommunicationPartyServiceGetCommunicationPartyDetailsGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetCommunicationPartyDetails", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCommunicationPartyDetails")
    @WebResult(name = "GetCommunicationPartyDetailsResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "GetCommunicationPartyDetails", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetCommunicationPartyDetails")
    @ResponseWrapper(localName = "GetCommunicationPartyDetailsResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetCommunicationPartyDetailsResponse")
    public CommunicationParty getCommunicationPartyDetails(
        @WebParam(name = "herId", targetNamespace = "http://register.nhn.no/CommunicationParty")
        Integer herId)
        throws ICommunicationPartyServiceGetCommunicationPartyDetailsGenericFaultFaultFaultMessage
    ;

    /**
     * 
     * @param herId
     * @return
     *     returns no.naks.services.nhn.client.Organization
     * @throws ICommunicationPartyServiceGetOrganizationDetailsGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetOrganizationDetails", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizationDetails")
    @WebResult(name = "GetOrganizationDetailsResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "GetOrganizationDetails", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetOrganizationDetails")
    @ResponseWrapper(localName = "GetOrganizationDetailsResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetOrganizationDetailsResponse")
    public Organization getOrganizationDetails(
        @WebParam(name = "herId", targetNamespace = "http://register.nhn.no/CommunicationParty")
        Integer herId)
        throws ICommunicationPartyServiceGetOrganizationDetailsGenericFaultFaultFaultMessage
    ;

    /**
     * 
     * @param herId
     * @return
     *     returns no.naks.services.nhn.client.Department
     * @throws ICommunicationPartyServiceGetDepartmentDetailsGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetDepartmentDetails", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetDepartmentDetails")
    @WebResult(name = "GetDepartmentDetailsResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "GetDepartmentDetails", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetDepartmentDetails")
    @ResponseWrapper(localName = "GetDepartmentDetailsResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetDepartmentDetailsResponse")
    public Department getDepartmentDetails(
        @WebParam(name = "herId", targetNamespace = "http://register.nhn.no/CommunicationParty")
        Integer herId)
        throws ICommunicationPartyServiceGetDepartmentDetailsGenericFaultFaultFaultMessage
    ;

    /**
     * 
     * @param herId
     * @return
     *     returns no.naks.services.nhn.client.Service
     * @throws ICommunicationPartyServiceGetServiceDetailsGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetServiceDetails", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetServiceDetails")
    @WebResult(name = "GetServiceDetailsResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "GetServiceDetails", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetServiceDetails")
    @ResponseWrapper(localName = "GetServiceDetailsResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetServiceDetailsResponse")
    public Service getServiceDetails(
        @WebParam(name = "herId", targetNamespace = "http://register.nhn.no/CommunicationParty")
        Integer herId)
        throws ICommunicationPartyServiceGetServiceDetailsGenericFaultFaultFaultMessage
    ;

    /**
     * 
     * @param herId
     * @return
     *     returns no.naks.services.nhn.client.OrganizationPerson
     * @throws ICommunicationPartyServiceGetOrganizationPersonDetailsGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetOrganizationPersonDetails", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizationPersonDetails")
    @WebResult(name = "GetOrganizationPersonDetailsResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "GetOrganizationPersonDetails", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetOrganizationPersonDetails")
    @ResponseWrapper(localName = "GetOrganizationPersonDetailsResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetOrganizationPersonDetailsResponse")
    public OrganizationPerson getOrganizationPersonDetails(
        @WebParam(name = "herId", targetNamespace = "http://register.nhn.no/CommunicationParty")
        Integer herId)
        throws ICommunicationPartyServiceGetOrganizationPersonDetailsGenericFaultFaultFaultMessage
    ;

    /**
     * 
     * @param p
     * @throws ICommunicationPartyServiceUpdateOrganizationPersonDetailsValidationFaultFaultFaultMessage
     * @throws ICommunicationPartyServiceUpdateOrganizationPersonDetailsGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "UpdateOrganizationPersonDetails", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrganizationPersonDetails")
    @RequestWrapper(localName = "UpdateOrganizationPersonDetails", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.UpdateOrganizationPersonDetails")
    @ResponseWrapper(localName = "UpdateOrganizationPersonDetailsResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.UpdateOrganizationPersonDetailsResponse")
    public void updateOrganizationPersonDetails(
        @WebParam(name = "p", targetNamespace = "http://register.nhn.no/CommunicationParty")
        OrganizationPersonUpdate p)
        throws ICommunicationPartyServiceUpdateOrganizationPersonDetailsGenericFaultFaultFaultMessage, ICommunicationPartyServiceUpdateOrganizationPersonDetailsValidationFaultFaultFaultMessage
    ;

    /**
     * 
     * @param t
     * @throws ICommunicationPartyServiceUpdateServiceDetailsGenericFaultFaultFaultMessage
     * @throws ICommunicationPartyServiceUpdateServiceDetailsValidationFaultFaultFaultMessage
     */
    @WebMethod(operationName = "UpdateServiceDetails", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateServiceDetails")
    @RequestWrapper(localName = "UpdateServiceDetails", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.UpdateServiceDetails")
    @ResponseWrapper(localName = "UpdateServiceDetailsResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.UpdateServiceDetailsResponse")
    public void updateServiceDetails(
        @WebParam(name = "t", targetNamespace = "http://register.nhn.no/CommunicationParty")
        ServiceUpdate t)
        throws ICommunicationPartyServiceUpdateServiceDetailsGenericFaultFaultFaultMessage, ICommunicationPartyServiceUpdateServiceDetailsValidationFaultFaultFaultMessage
    ;

    /**
     * 
     * @param org
     * @throws ICommunicationPartyServiceUpdateOrganizationDetailsValidationFaultFaultFaultMessage
     * @throws ICommunicationPartyServiceUpdateOrganizationDetailsGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "UpdateOrganizationDetails", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateOrganizationDetails")
    @RequestWrapper(localName = "UpdateOrganizationDetails", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.UpdateOrganizationDetails")
    @ResponseWrapper(localName = "UpdateOrganizationDetailsResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.UpdateOrganizationDetailsResponse")
    public void updateOrganizationDetails(
        @WebParam(name = "org", targetNamespace = "http://register.nhn.no/CommunicationParty")
        OrganizationUpdate org)
        throws ICommunicationPartyServiceUpdateOrganizationDetailsGenericFaultFaultFaultMessage, ICommunicationPartyServiceUpdateOrganizationDetailsValidationFaultFaultFaultMessage
    ;

    /**
     * 
     * @param org
     * @throws ICommunicationPartyServiceUpdateDepartmentDetailsGenericFaultFaultFaultMessage
     * @throws ICommunicationPartyServiceUpdateDepartmentDetailsValidationFaultFaultFaultMessage
     */
    @WebMethod(operationName = "UpdateDepartmentDetails", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/UpdateDepartmentDetails")
    @RequestWrapper(localName = "UpdateDepartmentDetails", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.UpdateDepartmentDetails")
    @ResponseWrapper(localName = "UpdateDepartmentDetailsResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.UpdateDepartmentDetailsResponse")
    public void updateDepartmentDetails(
        @WebParam(name = "org", targetNamespace = "http://register.nhn.no/CommunicationParty")
        DepartmentUpdate org)
        throws ICommunicationPartyServiceUpdateDepartmentDetailsGenericFaultFaultFaultMessage, ICommunicationPartyServiceUpdateDepartmentDetailsValidationFaultFaultFaultMessage
    ;

    /**
     * 
     * @param p
     * @return
     *     returns no.naks.services.nhn.client.OrganizationPerson
     * @throws ICommunicationPartyServiceCreateOrganizationPersonGenericFaultFaultFaultMessage
     * @throws ICommunicationPartyServiceCreateOrganizationPersonValidationFaultFaultFaultMessage
     */
    @WebMethod(operationName = "CreateOrganizationPerson", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateOrganizationPerson")
    @WebResult(name = "CreateOrganizationPersonResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "CreateOrganizationPerson", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.CreateOrganizationPerson")
    @ResponseWrapper(localName = "CreateOrganizationPersonResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.CreateOrganizationPersonResponse")
    public OrganizationPerson createOrganizationPerson(
        @WebParam(name = "p", targetNamespace = "http://register.nhn.no/CommunicationParty")
        OrganizationPersonCreate p)
        throws ICommunicationPartyServiceCreateOrganizationPersonGenericFaultFaultFaultMessage, ICommunicationPartyServiceCreateOrganizationPersonValidationFaultFaultFaultMessage
    ;

    /**
     * 
     * @param t
     * @return
     *     returns no.naks.services.nhn.client.Service
     * @throws ICommunicationPartyServiceCreateServiceValidationFaultFaultFaultMessage
     * @throws ICommunicationPartyServiceCreateServiceGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "CreateService", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateService")
    @WebResult(name = "CreateServiceResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "CreateService", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.CreateService")
    @ResponseWrapper(localName = "CreateServiceResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.CreateServiceResponse")
    public Service createService(
        @WebParam(name = "t", targetNamespace = "http://register.nhn.no/CommunicationParty")
        ServiceCreate t)
        throws ICommunicationPartyServiceCreateServiceGenericFaultFaultFaultMessage, ICommunicationPartyServiceCreateServiceValidationFaultFaultFaultMessage
    ;

    /**
     * 
     * @param org
     * @return
     *     returns no.naks.services.nhn.client.Organization
     * @throws ICommunicationPartyServiceCreateOrganizationValidationFaultFaultFaultMessage
     * @throws ICommunicationPartyServiceCreateOrganizationGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "CreateOrganization", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateOrganization")
    @WebResult(name = "CreateOrganizationResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "CreateOrganization", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.CreateOrganization")
    @ResponseWrapper(localName = "CreateOrganizationResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.CreateOrganizationResponse")
    public Organization createOrganization(
        @WebParam(name = "org", targetNamespace = "http://register.nhn.no/CommunicationParty")
        OrganizationCreate org)
        throws ICommunicationPartyServiceCreateOrganizationGenericFaultFaultFaultMessage, ICommunicationPartyServiceCreateOrganizationValidationFaultFaultFaultMessage
    ;

    /**
     * 
     * @param org
     * @return
     *     returns no.naks.services.nhn.client.Department
     * @throws ICommunicationPartyServiceCreateDepartmentGenericFaultFaultFaultMessage
     * @throws ICommunicationPartyServiceCreateDepartmentValidationFaultFaultFaultMessage
     */
    @WebMethod(operationName = "CreateDepartment", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/CreateDepartment")
    @WebResult(name = "CreateDepartmentResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "CreateDepartment", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.CreateDepartment")
    @ResponseWrapper(localName = "CreateDepartmentResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.CreateDepartmentResponse")
    public Department createDepartment(
        @WebParam(name = "org", targetNamespace = "http://register.nhn.no/CommunicationParty")
        DepartmentCreate org)
        throws ICommunicationPartyServiceCreateDepartmentGenericFaultFaultFaultMessage, ICommunicationPartyServiceCreateDepartmentValidationFaultFaultFaultMessage
    ;

    /**
     * 
     * @param herId
     * @return
     *     returns no.naks.services.nhn.client.ArrayOfEntityLogEntry
     * @throws ICommunicationPartyServiceGetChangeLogGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetChangeLog", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetChangeLog")
    @WebResult(name = "GetChangeLogResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "GetChangeLog", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetChangeLog")
    @ResponseWrapper(localName = "GetChangeLogResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetChangeLogResponse")
    public ArrayOfEntityLogEntry getChangeLog(
        @WebParam(name = "herId", targetNamespace = "http://register.nhn.no/CommunicationParty")
        Integer herId)
        throws ICommunicationPartyServiceGetChangeLogGenericFaultFaultFaultMessage
    ;

    /**
     * 
     * @return
     *     returns no.naks.services.nhn.client.CommunicationPartyStatistics
     * @throws ICommunicationPartyServiceGetCommunicationPartyStatisticsGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetCommunicationPartyStatistics", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCommunicationPartyStatistics")
    @WebResult(name = "GetCommunicationPartyStatisticsResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "GetCommunicationPartyStatistics", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetCommunicationPartyStatistics")
    @ResponseWrapper(localName = "GetCommunicationPartyStatisticsResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetCommunicationPartyStatisticsResponse")
    public CommunicationPartyStatistics getCommunicationPartyStatistics()
        throws ICommunicationPartyServiceGetCommunicationPartyStatisticsGenericFaultFaultFaultMessage
    ;

    /**
     * 
     * @param fromDate
     * @param toDate
     * @return
     *     returns no.naks.services.nhn.client.OrganizationUpdateStatistics
     * @throws ICommunicationPartyServiceGetOrganizationUpdateStatisticsGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetOrganizationUpdateStatistics", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetOrganizationUpdateStatistics")
    @WebResult(name = "GetOrganizationUpdateStatisticsResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "GetOrganizationUpdateStatistics", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetOrganizationUpdateStatistics")
    @ResponseWrapper(localName = "GetOrganizationUpdateStatisticsResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetOrganizationUpdateStatisticsResponse")
    public OrganizationUpdateStatistics getOrganizationUpdateStatistics(
        @WebParam(name = "fromDate", targetNamespace = "http://register.nhn.no/CommunicationParty")
        XMLGregorianCalendar fromDate,
        @WebParam(name = "toDate", targetNamespace = "http://register.nhn.no/CommunicationParty")
        XMLGregorianCalendar toDate)
        throws ICommunicationPartyServiceGetOrganizationUpdateStatisticsGenericFaultFaultFaultMessage
    ;

    /**
     * 
     * @param herId
     * @param period
     * @throws ICommunicationPartyServiceSetCommunicationPartyValidValidationFaultFaultFaultMessage
     * @throws ICommunicationPartyServiceSetCommunicationPartyValidGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "SetCommunicationPartyValid", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SetCommunicationPartyValid")
    @RequestWrapper(localName = "SetCommunicationPartyValid", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.SetCommunicationPartyValid")
    @ResponseWrapper(localName = "SetCommunicationPartyValidResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.SetCommunicationPartyValidResponse")
    public void setCommunicationPartyValid(
        @WebParam(name = "herId", targetNamespace = "http://register.nhn.no/CommunicationParty")
        Integer herId,
        @WebParam(name = "period", targetNamespace = "http://register.nhn.no/CommunicationParty")
        Period period)
        throws ICommunicationPartyServiceSetCommunicationPartyValidGenericFaultFaultFaultMessage, ICommunicationPartyServiceSetCommunicationPartyValidValidationFaultFaultFaultMessage
    ;

    /**
     * 
     * @param herId
     * @return
     *     returns byte[]
     * @throws ICommunicationPartyServiceGetCertificateForEncryptionValidationFaultFaultFaultMessage
     * @throws ICommunicationPartyServiceGetCertificateForEncryptionGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetCertificateForEncryption", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertificateForEncryption")
    @WebResult(name = "GetCertificateForEncryptionResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "GetCertificateForEncryption", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetCertificateForEncryption")
    @ResponseWrapper(localName = "GetCertificateForEncryptionResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetCertificateForEncryptionResponse")
    public byte[] getCertificateForEncryption(
        @WebParam(name = "herId", targetNamespace = "http://register.nhn.no/CommunicationParty")
        Integer herId)
        throws ICommunicationPartyServiceGetCertificateForEncryptionGenericFaultFaultFaultMessage, ICommunicationPartyServiceGetCertificateForEncryptionValidationFaultFaultFaultMessage
    ;

    /**
     * 
     * @param herId
     * @return
     *     returns byte[]
     * @throws ICommunicationPartyServiceGetCertificateForValidatingSignatureGenericFaultFaultFaultMessage
     * @throws ICommunicationPartyServiceGetCertificateForValidatingSignatureValidationFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetCertificateForValidatingSignature", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertificateForValidatingSignature")
    @WebResult(name = "GetCertificateForValidatingSignatureResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "GetCertificateForValidatingSignature", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetCertificateForValidatingSignature")
    @ResponseWrapper(localName = "GetCertificateForValidatingSignatureResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetCertificateForValidatingSignatureResponse")
    public byte[] getCertificateForValidatingSignature(
        @WebParam(name = "herId", targetNamespace = "http://register.nhn.no/CommunicationParty")
        Integer herId)
        throws ICommunicationPartyServiceGetCertificateForValidatingSignatureGenericFaultFaultFaultMessage, ICommunicationPartyServiceGetCertificateForValidatingSignatureValidationFaultFaultFaultMessage
    ;

    /**
     * 
     * @param ldapUrl
     * @return
     *     returns byte[]
     * @throws ICommunicationPartyServiceGetCertificateValidationFaultFaultFaultMessage
     * @throws ICommunicationPartyServiceGetCertificateGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetCertificate", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertificate")
    @WebResult(name = "GetCertificateResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "GetCertificate", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetCertificate")
    @ResponseWrapper(localName = "GetCertificateResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetCertificateResponse")
    public byte[] getCertificate(
        @WebParam(name = "ldapUrl", targetNamespace = "http://register.nhn.no/CommunicationParty")
        String ldapUrl)
        throws ICommunicationPartyServiceGetCertificateGenericFaultFaultFaultMessage, ICommunicationPartyServiceGetCertificateValidationFaultFaultFaultMessage
    ;

    /**
     * 
     * @param herId
     * @return
     *     returns no.naks.services.nhn.client.CertificateDetails
     * @throws ICommunicationPartyServiceGetCertificateDetailsForEncryptionGenericFaultFaultFaultMessage
     * @throws ICommunicationPartyServiceGetCertificateDetailsForEncryptionValidationFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetCertificateDetailsForEncryption", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertificateDetailsForEncryption")
    @WebResult(name = "GetCertificateDetailsForEncryptionResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "GetCertificateDetailsForEncryption", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetCertificateDetailsForEncryption")
    @ResponseWrapper(localName = "GetCertificateDetailsForEncryptionResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetCertificateDetailsForEncryptionResponse")
    public CertificateDetails getCertificateDetailsForEncryption(
        @WebParam(name = "herId", targetNamespace = "http://register.nhn.no/CommunicationParty")
        Integer herId)
        throws ICommunicationPartyServiceGetCertificateDetailsForEncryptionGenericFaultFaultFaultMessage, ICommunicationPartyServiceGetCertificateDetailsForEncryptionValidationFaultFaultFaultMessage
    ;

    /**
     * 
     * @param herId
     * @return
     *     returns no.naks.services.nhn.client.CertificateDetails
     * @throws ICommunicationPartyServiceGetCertificateDetailsForValidatingSignatureGenericFaultFaultFaultMessage
     * @throws ICommunicationPartyServiceGetCertificateDetailsForValidatingSignatureValidationFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetCertificateDetailsForValidatingSignature", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCertificateDetailsForValidatingSignature")
    @WebResult(name = "GetCertificateDetailsForValidatingSignatureResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "GetCertificateDetailsForValidatingSignature", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetCertificateDetailsForValidatingSignature")
    @ResponseWrapper(localName = "GetCertificateDetailsForValidatingSignatureResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetCertificateDetailsForValidatingSignatureResponse")
    public CertificateDetails getCertificateDetailsForValidatingSignature(
        @WebParam(name = "herId", targetNamespace = "http://register.nhn.no/CommunicationParty")
        Integer herId)
        throws ICommunicationPartyServiceGetCertificateDetailsForValidatingSignatureGenericFaultFaultFaultMessage, ICommunicationPartyServiceGetCertificateDetailsForValidatingSignatureValidationFaultFaultFaultMessage
    ;

    /**
     * 
     * @param sn
     * @param ou
     * @param cn
     * @return
     *     returns no.naks.services.nhn.client.ArrayOfCertificateDetails
     * @throws ICommunicationPartyServiceSearchCertificatesForEncryptionGenericFaultFaultFaultMessage
     * @throws ICommunicationPartyServiceSearchCertificatesForEncryptionValidationFaultFaultFaultMessage
     */
    @WebMethod(operationName = "SearchCertificatesForEncryption", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertificatesForEncryption")
    @WebResult(name = "SearchCertificatesForEncryptionResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "SearchCertificatesForEncryption", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.SearchCertificatesForEncryption")
    @ResponseWrapper(localName = "SearchCertificatesForEncryptionResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.SearchCertificatesForEncryptionResponse")
    public ArrayOfCertificateDetails searchCertificatesForEncryption(
        @WebParam(name = "sn", targetNamespace = "http://register.nhn.no/CommunicationParty")
        String sn,
        @WebParam(name = "cn", targetNamespace = "http://register.nhn.no/CommunicationParty")
        String cn,
        @WebParam(name = "ou", targetNamespace = "http://register.nhn.no/CommunicationParty")
        String ou)
        throws ICommunicationPartyServiceSearchCertificatesForEncryptionGenericFaultFaultFaultMessage, ICommunicationPartyServiceSearchCertificatesForEncryptionValidationFaultFaultFaultMessage
    ;

    /**
     * 
     * @param sn
     * @param ou
     * @param cn
     * @return
     *     returns no.naks.services.nhn.client.ArrayOfCertificateDetails
     * @throws ICommunicationPartyServiceSearchCertificatesForValidatingSignatureGenericFaultFaultFaultMessage
     * @throws ICommunicationPartyServiceSearchCertificatesForValidatingSignatureValidationFaultFaultFaultMessage
     */
    @WebMethod(operationName = "SearchCertificatesForValidatingSignature", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/SearchCertificatesForValidatingSignature")
    @WebResult(name = "SearchCertificatesForValidatingSignatureResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "SearchCertificatesForValidatingSignature", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.SearchCertificatesForValidatingSignature")
    @ResponseWrapper(localName = "SearchCertificatesForValidatingSignatureResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.SearchCertificatesForValidatingSignatureResponse")
    public ArrayOfCertificateDetails searchCertificatesForValidatingSignature(
        @WebParam(name = "sn", targetNamespace = "http://register.nhn.no/CommunicationParty")
        String sn,
        @WebParam(name = "cn", targetNamespace = "http://register.nhn.no/CommunicationParty")
        String cn,
        @WebParam(name = "ou", targetNamespace = "http://register.nhn.no/CommunicationParty")
        String ou)
        throws ICommunicationPartyServiceSearchCertificatesForValidatingSignatureGenericFaultFaultFaultMessage, ICommunicationPartyServiceSearchCertificatesForValidatingSignatureValidationFaultFaultFaultMessage
    ;

    /**
     * 
     * @param herId
     * @param code
     * @return
     *     returns no.naks.services.nhn.client.Code
     * @throws ICommunicationPartyServiceAddCustomAttributeGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "AddCustomAttribute", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/AddCustomAttribute")
    @WebResult(name = "AddCustomAttributeResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "AddCustomAttribute", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.AddCustomAttribute")
    @ResponseWrapper(localName = "AddCustomAttributeResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.AddCustomAttributeResponse")
    public Code addCustomAttribute(
        @WebParam(name = "herId", targetNamespace = "http://register.nhn.no/CommunicationParty")
        Integer herId,
        @WebParam(name = "code", targetNamespace = "http://register.nhn.no/CommunicationParty")
        Code code)
        throws ICommunicationPartyServiceAddCustomAttributeGenericFaultFaultFaultMessage
    ;

    /**
     * 
     * @param herId
     * @param code
     * @throws ICommunicationPartyServiceRemoveCustomAttributeGenericFaultFaultFaultMessage
     */
    @WebMethod(operationName = "RemoveCustomAttribute", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/RemoveCustomAttribute")
    @RequestWrapper(localName = "RemoveCustomAttribute", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.RemoveCustomAttribute")
    @ResponseWrapper(localName = "RemoveCustomAttributeResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.RemoveCustomAttributeResponse")
    public void removeCustomAttribute(
        @WebParam(name = "herId", targetNamespace = "http://register.nhn.no/CommunicationParty")
        Integer herId,
        @WebParam(name = "code", targetNamespace = "http://register.nhn.no/CommunicationParty")
        Code code)
        throws ICommunicationPartyServiceRemoveCustomAttributeGenericFaultFaultFaultMessage
    ;

    /**
     * 
     * @param herIds
     * @return
     *     returns no.naks.services.nhn.client.ArrayOfKeyValuePairOfintArrayOfCodeUO9UWExd
     */
    @WebMethod(operationName = "GetCustomAttributes", action = "http://register.nhn.no/CommunicationParty/ICommunicationPartyService/GetCustomAttributes")
    @WebResult(name = "GetCustomAttributesResult", targetNamespace = "http://register.nhn.no/CommunicationParty")
    @RequestWrapper(localName = "GetCustomAttributes", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetCustomAttributes")
    @ResponseWrapper(localName = "GetCustomAttributesResponse", targetNamespace = "http://register.nhn.no/CommunicationParty", className = "no.naks.services.nhn.client.GetCustomAttributesResponse")
    public ArrayOfKeyValuePairOfintArrayOfCodeUO9UWExd getCustomAttributes(
        @WebParam(name = "herIds", targetNamespace = "http://register.nhn.no/CommunicationParty")
        ArrayOfint herIds);

}
