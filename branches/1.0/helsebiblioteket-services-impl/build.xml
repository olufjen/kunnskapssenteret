<?xml version="1.0"?>
<!-- 
	TODO: add targets for webservice-generation
	TODO: add target for war-deployment
-->
<project name="helsebiblioteket-services-impl" basedir="." default="usage">
    <property file="build.properties"/>
	
	<property name="project.src.dir" value="${project.home.dir}/src"/>
	<property name="project.build.dir" value="${project.home.dir}/build"/>
	<property name="project.classes.dir" value="${project.build.dir}/classes"/>
	<property name="project.target.dir" value="${project.home.dir}/target"/>
	<property name="project.target.filename" value="${project.name}-${project.version}.jar"/>
	<property name="project.lib.dir" value="${project.home.dir}/lib"/>
	<property name="project.desc.dir" value="${project.home.dir}/desc"/>
	<property name="helsebiblioteket-administration-web-lib.dir" value="${helsebiblioteket-administration-web-home.dir}/lib"/>
	<property name="helsebiblioteket-domain-dao-services-target.dir" value="${helsebiblioteket-domain-dao-services-home.dir}/target"/>
	<property name="helsebiblioteket-sqlmapdao-target.dir" value="${helsebiblioteket-sqlmapdao-home.dir}/target"/>
	<!-- Web Services -->
	<property name="webservices.build.dir" value="${project.build.dir}/webservices"/>
	<property name="webservices.classes.dir" value="${webservices.build.dir}/classes" />
	<property name="webservices.classes.lib.dir" value="${webservices.classes.dir}/lib" />
	<property name="webservices.metainf.dir" value="${webservices.classes.dir}/META-INF" />
	<property name="webservices.tomcat.services.dir" value="${webservices.tomcat.dir}/services" />
	<property name="webservices.tomcat.lib.dir" value="${webservices.tomcat.dir}/lib" />
	<property name="webservices.target.dir" value="${project.home.dir}/target"/>
	<property name="webservices.target.filename" value="${webservices.servicename}-${webservices.serviceversion}.aar"/>
	<property name="webservices.target.exploded.dir" value="${webservices.target.filename}.exploded"/>
	
    <path id="master-classpath">
    	<fileset dir="${helsebiblioteket-administration-web-lib.dir}">
            <include name="*.jar"/>
        </fileset>
    	<fileset dir="${project.lib.dir}">
            <include name="*.jar"/>
        </fileset>
    	<fileset dir="${helsebiblioteket-domain-dao-services-target.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>
	
	<path id="master-sourcedir">
    	<fileset dir="${project.src.dir}">
            <include name="*.java"/>
        </fileset>
    </path>

    <target name="usage">
        <echo message=""/>
        <echo message="${name} build file"/>
        <echo message="-----------------------------------"/>
        <echo message=""/>
        <echo message="Available targets are:"/>
        <echo message=""/>
        <echo message="build     --> Build the application"/>
        <echo message="package   --> Create a jar for this project"/>
    	<echo message="clean     --> Remove class- and jar-files for this project"/>
        <echo message=""/>
    </target>

	<target name="echo-debug-params">
		<echo message="kunnskapssenteret.common.lib: ${kunnskapssenteret.common.lib}" />
	</target>

	<target name="prepare-dependencies" description="Compile main source tree java files">
		<ant dir="${helsebiblioteket-domain-dao-services-home.dir}" inheritAll="false" target="package"/>
		<ant dir="${helsebiblioteket-sqlmapdao-home.dir}" inheritAll="false" target="package"/>
	</target>

	<target name="build" description="Compile main source tree java files" depends="prepare-dependencies">
		<mkdir dir="${project.build.dir}"/>
		<mkdir dir="${project.classes.dir}"/>
        <javac 
        	destdir="${project.classes.dir}" source="1.5" target="1.5" debug="true"
            deprecation="false" optimize="false" failonerror="true">
            <src path="${project.src.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
        
        <!-- Separate copy-target to make sure property files are included -->
		<copy todir="${project.classes.dir}">
			<fileset  dir="${project.src.dir}" excludes="**/*.java" />
		</copy>
	</target>
	
	<target name="package" depends="build">
		<mkdir dir="${project.target.dir}"/>
		<jar 
			destfile="${project.target.dir}\${project.target.filename}"
			basedir="${project.classes.dir}"/>
	</target>

	<target name="clean" description="Clean output directories">
        <delete includeemptydirs="true">
            <fileset dir="${project.build.dir}">
                <include name="**/*"/>
            </fileset>
        </delete>
    </target>
	<target name="clean-target" description="Clean output directories">
		<delete includeemptydirs="true">
	       	<fileset dir="${project.target.dir}">
	       		<include name="**/*"/>
            </fileset>
        </delete>
    </target>
	
	
	<path id="webservices.classpath">
		<fileset dir="${helsebiblioteket-administration-web-lib.dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${project.lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="generate-service" depends="prepare-dependencies">
		<mkdir dir="${webservices.build.dir}" />
		<mkdir dir="${webservices.classes.dir}" />
		<mkdir dir="${webservices.classes.lib.dir}" />
		<mkdir dir="${webservices.metainf.dir}" />

		<copy file="${project.desc.dir}/services.xml" tofile="${webservices.metainf.dir}/services.xml" overwrite="true" />
		<copy file="${project.desc.dir}/applicationContext.xml" tofile="${webservices.classes.dir}/applicationContext.xml" overwrite="true" />
		<copy file="${project.desc.dir}/jdbc.properties" tofile="${webservices.classes.dir}/jdbc.properties" overwrite="true" />
		<copy file="${project.desc.dir}/mail.properties" tofile="${webservices.classes.dir}/mail.properties" overwrite="true" />
		<copy file="${project.desc.dir}/proxy.properties" tofile="${webservices.classes.dir}/proxy.properties" overwrite="true" />
		<copy file="${project.desc.dir}/sqlmap-config.xml" tofile="${webservices.classes.dir}/sqlmap-config.xml" overwrite="true" />
		<copy file="desc/ehcache-helsebiblioteket.xml" tofile="${webservices.classes.dir}/ehcache-helsebiblioteket.xml" overwrite="true" />


		<!-- TODO: Include jars in aar-file
		<copy file="../helsebiblioteket-domain-dao-services/target/helsebiblioteket-domain-dao-services-1.0.jar"
			tofile="${webservices.classes.dir}/lib/helsebiblioteket-domain-dao-services-1.0.jar" overwrite="true" />
		-->
		
		<javac debug="on" srcdir="${project.src.dir}" destdir="${webservices.classes.dir}" includes="*/**">
			<classpath refid="webservices.classpath" />
            <src path="${project.src.dir}"/>
            <classpath refid="master-classpath"/>
		</javac>

		<jar compress="false" basedir="${webservices.classes.dir}" destfile="${webservices.target.dir}/${webservices.target.filename}" />
		<!-- 
		-  deploying exploded, not jared
		-  crating aar-file, then unziping the file.
		-  todo: consider a better approach.
		--> 
		<unwar 
			src="${webservices.target.dir}/${webservices.target.filename}"
			dest="${webservices.target.dir}/${webservices.target.exploded.dir}"
		/>
		<!-- TODO: What was this?
		<delete file="${webservices.target.dir}/${webservices.target.filename}" />
		-->
		
	</target>
	
	<target name="deploy-service-exploded" depends="deploy-other">
		<mkdir dir="${webservices.tomcat.services.dir}/${webservices.target.exploded.dir}"/>
		<copy todir="${webservices.tomcat.services.dir}/${webservices.target.exploded.dir}">
			<fileset dir="${webservices.target.dir}/${webservices.target.exploded.dir}">
				<include name="**/*.*"/>
			</fileset>
		</copy>
	</target>

	<target name="deploy-service-aar" depends="deploy-other">
		<copy todir="${webservices.tomcat.services.dir}">
			<fileset dir="${webservices.target.dir}">
				<include name="**/*.aar"/>
			</fileset>
		</copy>
	</target>

		<target name="deploy-other" depends="generate-service">
		<copy todir="${webservices.tomcat.lib.dir}">
			<fileset dir="${webservices.target.dir}">
				<include name="**/*.jar"/>
			</fileset>
		</copy>
		<copy todir="${webservices.tomcat.lib.dir}">
			<fileset dir="${helsebiblioteket-domain-dao-services-target.dir}">
				<include name="**/*.jar"/>
			</fileset>
			<fileset dir="${helsebiblioteket-sqlmapdao-target.dir}">
				<include name="**/*.jar"/>
			</fileset>
		</copy>
		<!-- TODO: Only copy neccessary files! -->
		<copy todir="${webservices.tomcat.lib.dir}">
			<fileset dir="${helsebiblioteket-administration-web-lib.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${project.lib.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset file="${project.home.dir}/lib/ibatis-2.3.4.726.jar" />
		</copy>
			
	</target>
</project>
