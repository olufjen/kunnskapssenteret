<?xml version="1.0"?>

<project name="helsebiblioteket-administration-web" basedir="." default="usage">
    <property file="build.properties"/>

    <property name="project.src.dir" value="${project.home.dir}/src"/>
	<property name="project.lib.dir" value="${project.home.dir}/lib"/>
	<property name="project.build.dir" value="${project.home.dir}/build"/>
	<property name="project.classes.dir" value="${project.build.dir}/classes"/>
	<property name="project.web.dir" value="${project.home.dir}/WebRoot"/>
	<property name="project.build.web.dir" value="${project.build.dir}/WebRoot"/>
    <property name="project.build.web.classes.dir" value="${project.build.web.dir}/WEB-INF/classes"/>
    <property name="project.build.web.lib.dir" value="${project.build.web.dir}/WEB-INF/lib"/>
	<property name="project.target.filename" value="${project.name}-${project.version}.jar"/>
	<property name="project.target.dir" value="${project.home.dir}/target"/>

	<property name="helsebiblioteket-domain-dao-services-target.dir" value="${helsebiblioteket-domain-dao-services-home.dir}/target"/>
	<property name="helsebiblioteket-jdbc-dao-target.dir" value="${helsebiblioteket-jdbc-dao-home.dir}/target"/>
	<property name="helsebiblioteket-services-impl-target.dir" value="${helsebiblioteket-services-impl.dir}/target"/>
	<property name="helsebiblioteket-importexport-target.dir" value="${helsebiblioteket-importexport.dir}/target"/>
	<property name="helsebiblioteket-sqlmapdao-target.dir" value="${helsebiblioteket-sqlmapdao.dir}/target"/>

    <property name="test.dir" value="test"/>

    <path id="master-classpath">
        <fileset dir="${project.lib.dir}">
            <include name="*.jar"/>
        </fileset>
    	<fileset dir="${helsebiblioteket-domain-dao-services-target.dir}" includes="*.jar"/>
        <pathelement path="${test.dir}"/>

    	<!-- We need the servlet API classes: -->
        <!--  * for Tomcat 5/6 use servlet-api.jar -->
        <!--  * for other app servers - check the docs -->
        <fileset dir="${appserver.lib.dir}">
            <include name="servlet*.jar"/>
        </fileset>
    </path>

    <target name="usage">
        <echo message=""/>
        <echo message="${name} build file"/>
        <echo message="-----------------------------------"/>
        <echo message=""/>
        <echo message="Available targets are:"/>
        <echo message=""/>
        <echo message="build     --> Build the application"/>
        <echo message="deploy    --> Deploy application as directory"/>
        <echo message="deploywar --> Deploy application as a WAR file"/>
        <echo message="install   --> Install application in Tomcat"/>
        <echo message="reload    --> Reload application in Tomcat"/>
        <echo message="start     --> Start Tomcat application"/>
        <echo message="stop      --> Stop Tomcat application"/>
        <echo message="list      --> List Tomcat applications"/>
        <echo message=""/>
    </target>

	<target name="prepare-dependencies" description="Compile main source tree java files">
		<ant dir="${helsebiblioteket-domain-dao-services-home.dir}" inheritAll="false" target="package"/>
		<ant dir="${helsebiblioteket-jdbc-dao-home.dir}" inheritAll="false" target="package"/>
		<ant dir="${helsebiblioteket-services-impl.dir}" inheritAll="false" target="package"/>
		<ant dir="${helsebiblioteket-importexport.dir}" inheritAll="false" target="package"/>
		<ant dir="${helsebiblioteket-sqlmapdao.dir}" inheritAll="false" target="package"/>
	</target>


    <target name="build" description="Compile main source tree java files" depends="prepare-dependencies">
        <mkdir dir="${project.build.dir}"/>
    	<mkdir dir="${project.classes.dir}"/>
    	<mkdir dir="${project.build.web.dir}"/>
    	<mkdir dir="${project.build.web.classes.dir}"/>
    	<mkdir dir="${project.build.web.lib.dir}"/>

    	<javac destdir="${project.classes.dir}" source="1.5" target="1.5" debug="true"
               deprecation="false" optimize="false" failonerror="true">
            <src path="${project.src.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
    	<!-- Separate copy-target to make sure property files are included -->
		<copy todir="${project.classes.dir}">
			<fileset dir="${project.src.dir}" excludes="**/*.java"/>
		</copy>

		<copy todir="${project.build.web.dir}">
			<fileset dir="${project.web.dir}"/>
		</copy>
		<copy todir="${project.build.web.classes.dir}">
			<fileset dir="${project.classes.dir}"/>
		</copy>
    	<copy todir="${project.build.web.lib.dir}">
			<fileset dir="${project.lib.dir}" includes="*.jar" />
    		<fileset dir="${helsebiblioteket-domain-dao-services-target.dir}" includes="*.jar"/>
			<fileset dir="${helsebiblioteket-jdbc-dao-target.dir}" includes="*.jar"/>
			<fileset dir="${helsebiblioteket-services-impl-target.dir}" includes="*.jar"/>
    		<fileset dir="${helsebiblioteket-importexport-target.dir}" includes="*.jar"/>
    		<fileset dir="${helsebiblioteket-sqlmapdao-target.dir}" includes="*.jar"/>
		</copy>
    </target>
	
    <target name="deploy" depends="build" description="Deploy application">
        <copy todir="${deploy.path}/${project.name}" preservelastmodified="true">
            <fileset dir="${project.build.web.dir}"><include name="**/*.*"/></fileset>
        </copy>
    </target>

    <target name="deploywar" depends="build" description="Deploy application as a WAR file">
    	<!-- TODO: Fix this! -->
        <war destfile="${name}.war"
             webxml="${web.dir}/WEB-INF/web.xml">
            <fileset dir="${web.dir}">
                <include name="**/*.*"/>
            </fileset>
        </war>
        <copy todir="${deploy.path}" preservelastmodified="true">
            <fileset dir=".">
                <include name="*.war"/>
            </fileset>
        </copy>
    </target>

    <target name="clean" description="Clean output directories">
        <delete includeemptydirs="true"> <fileset dir="${project.build.dir}" includes="**/*"/> </delete>
    </target>

    <target name="undeploy" description="Un-Deploy application">
        <delete includeemptydirs="true"> <fileset dir="${deploy.path}/${project.name}" includes="**/*"/> </delete>
    </target>
    
        
    <target name="buildtests" description="Compile test tree java files">
    	<!-- TODO: Fix this -->
        <mkdir dir="${build.dir}"/>
        <javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
            deprecation="false" optimize="false" failonerror="true">
            <src path="${test.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
    </target>

    <path id="test-classpath">
        <fileset dir="${web.dir}/WEB-INF/lib">
            <include name="*.jar"/>
        </fileset>
        <pathelement path="${build.dir}"/>
        <pathelement path="${test.dir}"/>
        <pathelement path="${web.dir}/WEB-INF/classes"/>
    </path>

    <target name="tests" depends="build, buildtests" description="Run tests">
        <junit printsummary="on"
            fork="false"
            haltonfailure="false"
            failureproperty="tests.failed"
            showoutput="true">
            <classpath refid="test-classpath"/>
            <formatter type="brief" usefile="false"/>
            
            <batchtest>
                <fileset dir="${build.dir}">
                    <include name="**/*Tests.*"/>
                    <exclude name="**/Jdbc*Tests.*"/>
                </fileset>
            </batchtest>
            
        </junit>
        
        <fail if="tests.failed">
            tests.failed=${tests.failed}
            ***********************************************************
            ***********************************************************
            ****  One or more tests failed!  Check the output ...  ****
            ***********************************************************
            ***********************************************************
        </fail>
    </target>
    
    <target name="dbTests" depends="build, buildtests, dropTables, createTables, loadData" 
            description="Run db tests">
        <junit printsummary="on"
            fork="false"
            haltonfailure="false"
            failureproperty="tests.failed"
            showoutput="true">
            <classpath refid="test-classpath"/>
            <formatter type="brief" usefile="false"/>
            
            <batchtest>
                <fileset dir="${build.dir}">
                    <include name="**/Jdbc*Tests.*"/>
                </fileset>
            </batchtest>
            
        </junit>
        
        <fail if="tests.failed">
            tests.failed=${tests.failed}
            ***********************************************************
            ***********************************************************
            ****  One or more tests failed!  Check the output ...  ****
            ***********************************************************
            ***********************************************************
        </fail>
    </target>
	
	 <target name="dropTables">
        <echo message="DROP TABLES USING: ${db.driver} ${db.url}"/>
        <sql driver="${db.driver}"
            url="${db.url}"
            userid="${db.user}"
            password="${db.pw}"
            onerror="continue"
			src="database/drop_tables.sql"> 
			<classpath refid="master-classpath"/>
        </sql> 
    </target>

    
    <target name="createTables">
        <echo message="CREATE TABLES USING: ${db.driver} ${db.url}"/>
        <sql driver="${db.driver}"
             url="${db.url}"
             userid="${db.user}"
             password="${db.pw}"
             onerror="continue"
             src="database/create_tables.sql">  
            <classpath refid="master-classpath"/>
        </sql> 
    </target>

    <target name="loadData">
        <echo message="LOAD DATA USING: ${db.driver} ${db.url}"/>
        <sql driver="${db.driver}"
             url="${db.url}"
             userid="${db.user}"
             password="${db.pw}"
             onerror="continue"
             src="database/init_database.sql">  
            <classpath refid="master-classpath"/>
        </sql> 
    </target>

<!-- ============================================================== -->
<!-- Tomcat tasks - remove these if you don't have Tomcat installed -->
<!-- ============================================================== -->

    <path id="catalina-ant-classpath">
        <!-- We need the Catalina jars for Tomcat -->
        <!--  * for other app servers - check the docs -->
        <fileset dir="${appserver.lib.dir}">
            <include name="catalina-ant.jar"/>
        </fileset>
    </path>

    <taskdef name="install" classname="org.apache.catalina.ant.InstallTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="list" classname="org.apache.catalina.ant.ListTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="start" classname="org.apache.catalina.ant.StartTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>

    <target name="install" description="Install application in Tomcat">
        <install url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"
                 war="${name}"/>
    </target>

    <target name="reload" description="Reload application in Tomcat">
        <reload url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="start" description="Start Tomcat application">
        <start url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="stop" description="Stop Tomcat application">
        <stop url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="list" description="List Tomcat applications">
        <list url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"/>
    </target>

<!-- End Tomcat tasks -->

</project>
