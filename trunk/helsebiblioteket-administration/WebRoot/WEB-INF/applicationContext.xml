<?xml version="1.0" encoding="UTF-8"?>
<!-- 
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
 -->
<beans

xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd"

>

<context:annotation-config />
	<context:component-scan
		base-package="no.helsebiblioteket.admin" />
	<bean
		id="loggerListener"
		class="org.springframework.security.event.authentication.LoggerListener" />


	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	 	<property name="locations">
	 		<list>
	 			<value>/WEB-INF/application.properties</value>
	 			<value>/WEB-INF/jdbc.properties</value>
	 			<value>/WEB-INF/mail.properties</value>
	 		</list>
		</property>
	</bean>
	
	<bean id="dataSourceHelsebiblioteket" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${database.driver}"></property>
		<property name="url" value="${database.url}"></property>
		<property name="username" value="${database.username}"></property>
		<property name="password" value="${database.password}"></property>
	</bean>

	<bean id="jdbcTemplateHelsebiblioteket" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSourceHelsebiblioteket"></property>
	</bean>
	
	<bean id="userDao" class="no.helsebiblioteket.admin.sqlmapdao.SqlMapUserDao">
		<property name="sqlMapClient" ref="sqlMapClient"/>
	</bean>
	<bean id="roleDao" class="no.helsebiblioteket.admin.sqlmapdao.SqlMapRoleDao">
		<property name="sqlMapClient" ref="sqlMapClient"/>
	</bean>
	<bean id="personDao" class="no.helsebiblioteket.admin.sqlmapdao.SqlMapPersonDao">
		<property name="sqlMapClient" ref="sqlMapClient"/>
	</bean>
	<bean id="positionDao" class="no.helsebiblioteket.admin.sqlmapdao.SqlMapPositionDao">
		<property name="sqlMapClient" ref="sqlMapClient"/>
	</bean>
	<bean id="accessDao" class="no.helsebiblioteket.admin.sqlmapdao.SqlMapAccessDao">
		<property name="sqlMapClient" ref="sqlMapClient"/>
	</bean>
	<bean id="organizationDao" class="no.helsebiblioteket.admin.sqlmapdao.SqlMapOrganizationDao">
		<property name="sqlMapClient" ref="sqlMapClient"/>
	</bean>
	<bean id="organizationListDao" class="no.helsebiblioteket.admin.sqlmapdao.SqlMapOrganizationListDao">
		<property name="sqlMapClient" ref="sqlMapClient"/>
	</bean>
	<bean id="organizationTypeDao" class="no.helsebiblioteket.admin.sqlmapdao.SqlMapOrganizationTypeDao">
		<property name="sqlMapClient" ref="sqlMapClient"/>
	</bean>
	<bean id="organizationNameDao" class="no.helsebiblioteket.admin.sqlmapdao.SqlMapOrganizationNameDao">
		<property name="sqlMapClient" ref="sqlMapClient"/>
	</bean>
	<bean id="contactInformationDao" class="no.helsebiblioteket.admin.sqlmapdao.SqlMapContactInformationDao">
		<property name="sqlMapClient" ref="sqlMapClient"/>
	</bean>
	<bean id="ipRangeDao" class="no.helsebiblioteket.admin.sqlmapdao.SqlMapIpRangeDao">
		<property name="sqlMapClient" ref="sqlMapClient"/>
	</bean>
	<bean id="resourceDao" class="no.helsebiblioteket.admin.sqlmapdao.SqlMapResourceDao">
		<property name="sqlMapClient" ref="sqlMapClient"/>
	</bean>
	<bean id="supplierSourceDao" class="no.helsebiblioteket.admin.sqlmapdao.SqlMapSupplierSourceDao">
		<property name="sqlMapClient" ref="sqlMapClient"/>
	</bean>
	<bean id="userListDao" class="no.helsebiblioteket.admin.sqlmapdao.SqlMapUserListDao">
		<property name="sqlMapClient" ref="sqlMapClient"/>
	</bean>
	<bean id="userRoleDao" class="no.helsebiblioteket.admin.sqlmapdao.SqlMapUserRoleDao">
		<property name="sqlMapClient" ref="sqlMapClient"/>
	</bean>
	
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
    	<property name="configLocation" value="WEB-INF/sqlmap-config.xml"/>
    	<property name="dataSource" ref="dataSourceHelsebiblioteket"/>
   	</bean>
   	
   	<bean id="LDAPLookupUtil" class="no.helsebiblioteket.admin.service.importexport.ldap.LDAPLookupUtil">
	</bean>
	
  	<bean id="importEndUsersService" class="no.helsebiblioteket.admin.service.importexport.impl.ImportEndUsersServiceImpl">
 		<property name="userService" ref="userService"></property>
 		<property name="ldapLookupUtil" ref="LDAPLookupUtil"></property>
 		<!--<property name="commonPassword" value="password" />-->
	</bean>
	
	<bean id="importMemberOrganizationsService" class="no.helsebiblioteket.admin.service.importexport.impl.ImportMemberOrganizationsServiceImpl">
	 	<property name="organizationService" ref="organizationService"></property>
	</bean>

	<!-- 
		A service for accessing (relative) static properties like types of entities etc.
		Example: types of organizations, types of roles, types of access etc
	-->
	
	<!--  <bean id="adminService" class="no.helsebiblioteket.admin.service.impl.AdminServiceImpl">
	</bean>-->

	<bean id="accessService" class="no.helsebiblioteket.admin.service.impl.AccessServiceImpl">
  		<property name="accessDao" ref="accessDao"></property>
  		<property name="supplierSourceDao" ref="supplierSourceDao"></property>
  	</bean>
  	<bean id="loginService" class="no.helsebiblioteket.admin.service.impl.LoginServiceImpl">
  		<property name="userService" ref="userService"></property>
    	<property name="emailFromName" value="redaksjonen@helsebiblioteket.no"></property>
    	<property name="emailFromEmail" value="redaksjonen@helsebiblioteket.no"></property>
    	<property name="emailSubject" value="tilgangsinformasjon for helsebiblioteket.no"></property>
    	<property name="emailMessage" value="Her er ditt nye passord for tilgang til http://www.helsebiblioteket.no: ##password##"></property>
  	</bean>
  	
  	<bean id="organizationService" class="no.helsebiblioteket.admin.service.impl.OrganizationServiceImpl">
    	<property name="organizationDao" ref="organizationDao"></property>
    	<property name="organizationListDao" ref="organizationListDao"></property>
    	<property name="organizationTypeDao" ref="organizationTypeDao"></property>
    	<property name="organizationNameDao" ref="organizationNameDao"></property>
    	<property name="personDao" ref="personDao"></property>
    	<!--<property name="accessDao" ref="accessDao"></property>-->
    	<property name="contactInformationDao" ref="contactInformationDao"></property>
    	<property name="ipRangeDao" ref="ipRangeDao"></property>
    	<!--<property name="resourceDao" ref="resourceDao"></property>-->
    	<property name="supplierSourceDao" ref="supplierSourceDao"></property>
  	</bean>
 
  	<bean id="userService" class="no.helsebiblioteket.admin.service.impl.UserServiceImpl">
  		<property name="userDao" ref="userDao"></property>
  		<property name="userListDao" ref="userListDao"></property>
  		<property name="roleDao" ref="roleDao"></property>
  		<property name="userRoleDao" ref="userRoleDao"></property>
  		<property name="personDao" ref="personDao"></property>
  		<property name="positionDao" ref="positionDao"></property>
  		<property name="organizationDao" ref="organizationDao"></property>
  	</bean>
  	<!-- <bean id="emailService" class="no.helsebiblioteket.admin.service.EmailServiceSMTPImpl">
    	<property name="host" value="${mail.smtp.host}"></property>
    	<property name="debug" value="${mail.debug}"></property>
  	</bean>-->
	
<!--  Spring security bean classes start    -->


	<bean id="filterChainProxy"
         class="org.springframework.security.util.FilterChainProxy">
         <property name="filterInvocationDefinitionSource">
	         <value>
	         CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
	         PATTERN_TYPE_APACHE_ANT
	         /error/*=#NONE#
	         /back*=#NONE#
	         /**=httpSessionContextIntegrationFilter,logoutFilter,authenticationProcessingFilter,securityContextHolderAwareRequestFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor
	         </value>
         </property>
    </bean>
		
	<bean id="httpSessionContextIntegrationFilter" class="org.springframework.security.context.HttpSessionContextIntegrationFilter"/>

	<bean id="logoutFilter" 
		class="org.springframework.security.ui.logout.LogoutFilter">
		<constructor-arg value="/login.faces" />
		<constructor-arg>
			<list>
				<bean
					class="org.springframework.security.ui.logout.SecurityContextLogoutHandler" />
			</list>
		</constructor-arg>
		<property name="filterProcessesUrl">
			<value>/j_spring_security_logout.jsp</value>
		</property>
	</bean>
	
	<bean id="authenticationProcessingFilter"   class="org.springframework.security.ui.webapp.AuthenticationProcessingFilter">
       <property name="filterProcessesUrl">
       <value>/j_spring_security_check.jsp</value>
       </property>
       <property name="authenticationFailureUrl">
       <value>/login.faces</value>
       </property>
       <property name="defaultTargetUrl">
       <value>/welcome.faces</value>
       </property>
  
       <property name="authenticationManager">
       <ref bean="authenticationManager" />
       </property>
    </bean>
	
	<bean id="securityContextHolderAwareRequestFilter"	class="org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter" />
	
	 <bean id="anonymousProcessingFilter"
		class="org.springframework.security.providers.anonymous.AnonymousProcessingFilter">
		<property name="key" value="changeThis" />
		<property name="userAttribute"
			value="anonymousUser,ROLE_ANONYMOUS,ADMIN" />
	</bean>
	 
	<bean id="exceptionTranslationFilter" class="org.springframework.security.ui.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint">
			<bean
				class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint">
				<property name="loginFormUrl" value="/login.faces" />
				<property name="forceHttps" value="false" />
			</bean>
		</property>
		<property name="accessDeniedHandler">
			<bean
				class="org.springframework.security.ui.AccessDeniedHandlerImpl">
				<property name="errorPage" value="/welcome.faces" />
			</bean>
		</property>
	</bean>
	 
	 
	 <bean id="filterInvocationInterceptor"
		class="org.springframework.security.intercept.web.FilterSecurityInterceptor">
		<property name="authenticationManager"
			ref="authenticationManager" />
		<property name="accessDecisionManager"
			ref="accessDecisionManager" />
		<property name="objectDefinitionSource">
			<value>
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
				PATTERN_TYPE_APACHE_ANT
				
				<!-- 
				LOWERCASE
				ROLE_ADMINISTRATOR
				/login.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/welcome.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/forgotten-password.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/forgotten-password-sent.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/organizations-overview.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/organization-details.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/organization-edit.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/new-organization.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/new-supplierorganization.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/new-memberorganization.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/users-overview.tiles.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/user-details.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/user-edit.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/edit-enduser.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/edit-administrator.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/user-new.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/new-enduser.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/new-administrator.faces=IS_AUTHENTICATED_ANONYMOUSLY
				/user.faces=IS_AUTHENTICATED_ANONYMOUSLY 
				 -->
				 /welcome.faces=ROLE_administrator
			</value>
		</property>
	</bean>
	 
	 <bean id="accessDecisionManager"
		class="org.springframework.security.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions" value="false" />
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.vote.RoleVoter" />
				<bean class="org.springframework.security.vote.AuthenticatedVoter" />
			</list>
		</property>
	</bean>

	<bean id="authenticationManager" class="org.springframework.security.providers.ProviderManager">
       <property name="providers">
       <list>
       <ref local="daoAuthenticationProvider" />
       </list>
       </property>
    </bean>
	
	<bean
        id="daoAuthenticationProvider"
        class="org.springframework.security.providers.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userDetailsService" />
    </bean>
            
            
     <bean id="userDetailsService" class="no.helsebiblioteket.admin.service.impl.UserDetailsServiceImpl">
          <constructor-arg ref="userService" />
     </bean>
        
 <!--    <bean id="userRepository"  class="no.helsebiblioteket.admin.dao.JdbcUserDao"></bean>  --> 
 
 
 
                           
<!-- End of spring security  -->	

 </beans>

