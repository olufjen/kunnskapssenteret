<?xml version="1.0"?>

<project name="helsebiblioteket-sso" basedir="." default="usage">
    <property file="build.properties"/>
    <property name="project.src.dir" value="${project.home}/src"/>
	<property name="project.build.dir" value="${project.home}/build"/>
	<property name="project.classes.dir" value="${project.build.dir}/classes"/>
	<property name="project.lib.dir" value="${project.home}/lib"/>
	<property name="project.target.dir" value="${project.home}/target"/>
	<property name="project.target.filename" value="${project.name}-${project.version}.jar"/>
	<property name="project.plugin.config.dir" value="${project.home}/verticalsite/pluginconfig" />
	<property name="helsebiblioteket-domain-dao-services-target.dir" value="${helsebiblioteket-domain-dao-services-home.dir}/target"/>
	<property name="helsebiblioteket-services-impl-target.dir" value="${helsebiblioteket-services-impl-home.dir}/target"/>
	<property name="helsebiblioteket-administration-web-lib.dir" value="${helsebiblioteket-administration-web-home.dir}/lib"/>
	<property name="helsebiblioteket-sqlmapdao-target.dir" value="${helsebiblioteket-sqlmapdao-home.dir}/target"/>
	<property name="helsebiblioteket-services-geoip-target.dir" value="${helsebiblioteket-services-geoip-home.dir}/target"/>
	<property name="evs.cms.deploy.lib.dir" value="${evs.cms.deploy.dir}/WEB-INF/lib"/>
	
	
    <path id="master-classpath">
    	<fileset dir="${project.lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    	<fileset dir="${helsebiblioteket-domain-dao-services-target.dir}">
            <include name="**/*.jar"/>
        </fileset>
    	<fileset dir="${helsebiblioteket-administration-web-lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>
	<path id="master-sourcedir">
    	<fileset dir="${project.src.dir}">
            <include name="*.java"/>
        </fileset>
    </path>

    <target name="usage">
        <echo message=""/>
        <echo message="${name} build file"/>
        <echo message="-----------------------------------"/>
        <echo message=""/>
        <echo message="Available targets are:"/>
        <echo message=""/>
        <echo message="build     --> Build the application"/>
        <echo message="package   --> Create a jar for this project"/>
    	<echo message="clean     --> Remove class- and jar-files for this project"/>
    	<echo message="reload    --> Reload application in Tomcat"/>
    	<echo message="start     --> Start Tomcat application"/>
    	<echo message="stop      --> Stop Tomcat application"/>
        <echo message=""/>
    </target>

	<target name="echo-debug-params">
		<echo message="kunnskapssenteret.common.lib: ${kunnskapssenteret.common.lib}" />
	</target>
	
	<target name="prepare-dependencies" description="Compile main source tree java files">
		<ant dir="${helsebiblioteket-domain-dao-services-home.dir}" inheritAll="false" target="package"/>
		<ant dir="${helsebiblioteket-services-geoip-home.dir}" inheritAll="false" target="package"/>
		<ant dir="${helsebiblioteket-services-impl-home.dir}" inheritAll="false" target="package"/>
		<ant dir="${helsebiblioteket-sqlmapdao-home.dir}" inheritAll="false" target="package"/>
	</target>

	<target name="build" description="Compile main source tree java files" depends="prepare-dependencies">
		<mkdir dir="${project.build.dir}"/>
		<mkdir dir="${project.classes.dir}"/>
        <javac destdir="${project.classes.dir}" source="1.5" target="1.5" debug="true"
            deprecation="false" optimize="false" failonerror="true">
            <src path="${project.src.dir}"/>
            <classpath refid="master-classpath" />
        	
        </javac>
        
        <!-- Separate copy-target to make sure property files are included -->
		<copy todir="${project.classes.dir}">
			<fileset dir="${project.src.dir}" excludes="**/*.java" />
		</copy>
	</target>
	
	<target name="package" depends="build">
		<mkdir dir="${project.target.dir}"/>
		<jar destfile="${project.target.dir}/${project.target.filename}"
			basedir="${project.classes.dir}" />
	</target>

	<target name="clean" description="Clean output directories">
        <delete includeemptydirs="true">
            <fileset dir="${project.build.dir}">
                <include name="**/*"/>
            </fileset>
        </delete>
    </target>
	
	<target name="clean-target" description="Clean output directories">
        <delete includeemptydirs="true">
        	<fileset dir="${project.target.dir}">
                <include name="**/*.jar"/>
            </fileset>
        </delete>
    </target>
	
	<target name="deploy-wsclient" depends="package">
		<copy todir="${evs.plugin.deploy.dir}">
			<fileset file="${project.target.dir}/${project.target.filename}" />
			<fileset dir="${project.plugin.config.dir}" includes="*-plugin.xml"/>
			<fileset dir="${project.plugin.config.dir}" includes="ehcache-helsebiblioteket.xml"/>
			<fileset dir="${project.plugin.config.dir}" includes="environment.properties"/>
			<fileset dir="${helsebiblioteket-services-impl-target.dir}" includes="**/*.jar"/>
			<fileset dir="${helsebiblioteket-domain-dao-services-target.dir}" includes="**/*.jar"/>
			<!-- TODO: Copy all from folders. Make sure all are include from right source! -->
			<fileset file="${helsebiblioteket-services-impl-home.dir}/lib/XmlSchema-1.4.2.jar" />
			<fileset file="${helsebiblioteket-services-impl-home.dir}/lib/neethi-2.0.4.jar" />
			<fileset file="${helsebiblioteket-services-impl-home.dir}/lib/annogen-0.1.0.jar" />
			<fileset file="${helsebiblioteket-services-impl-home.dir}/lib/axis2-kernel-1.4.1.jar" />
			<fileset file="${helsebiblioteket-services-impl-home.dir}/lib/axis2-adb-1.4.1.jar" />
			<fileset file="${helsebiblioteket-services-impl-home.dir}/lib/axiom-api-1.2.7.jar" />
			<fileset file="${helsebiblioteket-services-impl-home.dir}/lib/axiom-impl-1.2.7.jar" />
		</copy>
		<!--<copy todir="${evs.cms.deploy.lib.dir}">
			<fileset file="${helsebiblioteket-services-impl-home.dir}/lib/aspectjweaver-1.5.3.jar" />
			<fileset file="${helsebiblioteket-services-impl-home.dir}/lib/ehcache-1.5.0.jar" />	
		</copy>-->
	</target>
	
	<target name="deploy-jdbcclient" depends="package">
		<copy todir="${evs.plugin.deploy.dir}">
			<fileset file="${project.target.dir}/${project.target.filename}" />
			<fileset dir="${project.plugin.config.dir}" includes="sso-jdbc-plugins-all-plugin.xml"/>
			<fileset dir="${project.plugin.config.dir}" includes="ehcache-helsebiblioteket.xml"/>
			<fileset dir="${project.plugin.config.dir}" includes="sqlmap-config.xml" />
			<fileset dir="${project.plugin.config.dir}" includes="environment.properties"/>
		</copy>
		<copy todir="${evs.cms.deploy.lib.dir}">
			<fileset file="${helsebiblioteket-services-impl-home.dir}/lib/aspectjweaver-1.5.3.jar" />
			<fileset file="${helsebiblioteket-services-impl-home.dir}/lib/ehcache-1.5.0.jar" />
			<fileset file="${helsebiblioteket-services-impl-home.dir}/lib/ibatis-2.3.4.726.jar" />
			<fileset file="${helsebiblioteket-services-impl-home.dir}/lib/commons-dbcp-1.2.2.jar" />
			<fileset file="${helsebiblioteket-services-impl-home.dir}/lib/commons-pool-1.4.jar" />
			<fileset file="${helsebiblioteket-services-geoip-home.dir}/lib/maxmindgeoip.jar" />
			<fileset dir="${helsebiblioteket-sqlmapdao-target.dir}" includes="**/*.jar" />
			<fileset dir="${helsebiblioteket-services-geoip-target.dir}" includes="**/*.jar" />
			<fileset dir="${helsebiblioteket-services-impl-target.dir}" includes="**/*.jar"/>
			<fileset dir="${helsebiblioteket-domain-dao-services-target.dir}" includes="**/*.jar"/>
			
		</copy>
	</target>

	<!-- ============================================================== -->
	<!-- Tomcat tasks - remove these if you don't have Tomcat installed -->
	<!-- ============================================================== -->

	    <path id="catalina-ant-classpath">
	        <!-- We need the Catalina jars for Tomcat -->
	        <!--  * for other app servers - check the docs -->
	        <fileset dir="${appserver.lib.dir}">
	            <include name="catalina-ant.jar"/>
	        </fileset>
	    </path>
<!--
	    <taskdef name="install" classname="org.apache.catalina.ant.InstallTask">
	        <classpath refid="catalina-ant-classpath"/>
	    </taskdef>
	    <taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
	        <classpath refid="catalina-ant-classpath"/>
	    </taskdef>
	    <taskdef name="list" classname="org.apache.catalina.ant.ListTask">
	        <classpath refid="catalina-ant-classpath"/>
	    </taskdef>
	    <taskdef name="start" classname="org.apache.catalina.ant.StartTask">
	        <classpath refid="catalina-ant-classpath"/>
	    </taskdef>
	    <taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
	        <classpath refid="catalina-ant-classpath"/>
	    </taskdef>

	    <target name="install" description="Install application in Tomcat">
	        <install url="${tomcat.manager.url}"
	                 username="${tomcat.manager.username}"
	                 password="${tomcat.manager.password}"
	                 path="/${name}"
	                 war="${name}"/>
	    </target>

	    <target name="reload" description="Reload application in Tomcat">
	        <reload url="${tomcat.manager.url}"
	                 username="${tomcat.manager.username}"
	                 password="${tomcat.manager.password}"
	                 path="/${name}"/>
	    </target>

	    <target name="start" description="Start Tomcat application">
	        <start url="${tomcat.manager.url}"
	                 username="${tomcat.manager.username}"
	                 password="${tomcat.manager.password}"
	                 path="/${name}"/>
	    </target>

	    <target name="stop" description="Stop Tomcat application">
	        <stop url="${tomcat.manager.url}"
	                 username="${tomcat.manager.username}"
	                 password="${tomcat.manager.password}"
	                 path="/${name}"/>
	    </target>

	    <target name="list" description="List Tomcat applications">
	        <list url="${tomcat.manager.url}"
	                 username="${tomcat.manager.username}"
	                 password="${tomcat.manager.password}"/>
	    </target>
-->
	<!-- End Tomcat tasks -->
</project>
