<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="SupplierSource">
	<typeAlias alias="SupplierSource" type="no.helsebiblioteket.admin.domain.SupplierSource" />
	<typeAlias alias="Url" type="no.helsebiblioteket.admin.domain.Url" />
	<cacheModel id="SupplierSourceDomainCache" type="LRU" readOnly="false" serialize="true">
		<flushInterval minutes="10"/>
		<flushOnExecute statement="insertSupplierSource"/>
		<flushOnExecute statement="updateSupplierSource"/>
		<flushOnExecute statement="deleteSupplierSource"/>
		<property name="size" value="1000" />
	</cacheModel>
	<resultMap id="SupplierSourceMap" class="SupplierSource">
		<result property="supplierSourceName" column="supplier_source_name" />
		<result property="url.domain" column="domain" />
		<result property="id" column="supplier_source_id" />
		<result property="proxyDatabaseName" column="proxy_database_name" />
		<result property="deleted" column="deleted" />
		<result property="lastChanged" column="last_changed" />
	</resultMap>
	<insert id="insertSupplierSource" parameterClass="SupplierSource">
		<selectKey resultClass="int" keyProperty="id">
			SELECT nextval('tbl_supplier_source_supplier_source_id_seq') as id;
		</selectKey>
		insert into tbl_supplier_source (
			supplier_source_name,
			domain,
			supplier_source_id,
			proxy_database_name,
			deleted,
			last_changed
		) values (
			#supplierSourceName#,
			#url.domain#,
			#id#,
			#proxyDatabaseName#,
			#deleted#,
			date_trunc('milliseconds', now())
		);
	</insert>
	<update id="updateSupplierSource" parameterClass="SupplierSource">
		update tbl_supplier_source set
	      	supplier_source_name = #supplierSourceName#,
      		domain = #url.domain#,
      		proxy_database_name = #proxyDatabaseName#,
      		deleted = #deleted#,
    	  	last_changed = date_trunc('milliseconds', now())
    	where supplier_source_id = #id# and date_trunc('milliseconds', last_changed) = #lastChanged#;
	</update>
	<delete id="deleteSupplierSource" parameterClass="SupplierSource">
		delete from tbl_supplier_source
		where supplier_source_id = #id#
	</delete>
	<select id="getSupplierSourceListAll" resultMap="SupplierSourceMap">
		select supplier_source_name, domain, supplier_source_id, proxy_database_name, deleted, date_trunc('milliseconds', last_changed) as last_changed
		from tbl_supplier_source
		where deleted is false;
	</select>
	<select id="getSupplierSourceById" resultMap="SupplierSourceMap" parameterClass="integer">
		select supplier_source_name, domain, supplier_source_id, proxy_database_name, deleted, date_trunc('milliseconds', last_changed) as last_changed
		from tbl_supplier_source
		where supplier_source_id = #id# and deleted is false;
	</select>
	<select id="getSupplierSourceByDomain" resultMap="SupplierSourceMap" parameterClass="Url">
		select supplier_source_name, domain, supplier_source_id, proxy_database_name, deleted, date_trunc('milliseconds', last_changed) as last_changed
		from tbl_supplier_source
		where #domain# LIKE domain and deleted is false;
	</select>
</sqlMap>
